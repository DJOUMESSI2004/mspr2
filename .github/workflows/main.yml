name: CI/CD MSPR2

on:
  push:
    branches: [master, model, etl]
  pull_request:
    branches: [master, model, etl]

jobs:
  build:
    name: Build des services
    runs-on: ubuntu-latest
    steps:
      - name: R√©cup√©ration du code
        uses: actions/checkout@v3

      - name: Installer Docker Compose (manuellement)
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Build des images Docker
        run: |
          docker-compose build

      - name: Notification du build
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "‚úÖ Build termin√© avec succ√®s"
          body: "Les services ont √©t√© build√©s avec succ√®s."
          to: ${{ secrets.TEAM_EMAILS }}
          from: ${{ secrets.EMAIL_USERNAME }}

  analyse:
    name: Analyse du code (flake8)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Installer flake8
        run: |
          pip install flake8
      - name: Ex√©cuter flake8 sur /ml
        run: |
          cd ml
          flake8 . || true
      - name: Notification analyse
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "üîç R√©sultat de l'analyse flake8"
          body: "L'analyse du code avec flake8 a √©t√© ex√©cut√©e. Consultez les logs pour les d√©tails."
          to: ${{ secrets.TEAM_EMAILS }}
          from: ${{ secrets.EMAIL_USERNAME }}

  tests:
    name: Tests unitaires Pytest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Installer d√©pendances
        working-directory: ./ml
        run: |
          pip install -r requirements.txt
      - name: Ex√©cuter les tests Pytest
        id: tests
        working-directory: ./ml
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/src
          pytest tests/
      - name: Notification test
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "üß™ R√©sultat des tests Pytest"
          body: |
            R√©sultat des tests : ${{ steps.tests.outcome }}
            Voir : ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.TEAM_EMAILS }}
          from: ${{ secrets.EMAIL_USERNAME }}

  simulate_deploy:
    name: Simulation de d√©ploiement PowerShell
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Simuler le d√©ploiement (FR, US, CH)
        run: |
          powershell.exe -ExecutionPolicy Bypass -File simulation_deploiement/simulate-ftp-deploy.ps1 -Countries fr,us,ch
      - name: Notification d√©ploiement
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "üöÄ Simulation de d√©ploiement effectu√©e"
          body: "Le d√©ploiement simul√© a √©t√© ex√©cut√© pour les environnements FR, US et CH."
          to: ${{ secrets.TEAM_EMAILS }}
          from: ${{ secrets.EMAIL_USERNAME }}